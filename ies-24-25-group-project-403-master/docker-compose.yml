version: '3.8'

services:

  nginx:
    image: nginx:alpine
    container_name: nginx
    depends_on:
      - react
      - springboot
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro # Montar a configuração personalizada do NGINX
    networks:
      - internal-net

  react:
    build:
      context: ./ProjFrontend/beachcontrol/
      dockerfile: Dockerfile
    networks:
      - internal-net
    ports:
      - '3000:3000'
    stdin_open: true
    command: sh -c "npm start --silent"
    environment:
      - NODE_ENV=production

  mongodb:
    image: mongo:latest
    container_name: mongodb
    hostname: mongodb
    restart: unless-stopped
    networks:
      - internal-net
    ports:
      - '27017:27017'
    volumes:
      - ./data/MongoDB:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --username admin --password example --authenticationDatabase admin | grep 1
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 15s

  springboot:
    build:
      context: ./ProjAPI
      dockerfile: Dockerfile
    container_name: api
    networks:
      - internal-net
    depends_on:
      mongodb:
        condition: service_healthy
    ports:
      - '8080:8080'
    environment:
      SPRING_DATA_MONGODB_HOST: ${SPRING_DATA_MONGODB_HOST}
      SPRING_DATA_MONGODB_PORT: ${SPRING_DATA_MONGODB_PORT}
      SPRING_DATA_MONGODB_USERNAME: ${SPRING_DATA_MONGODB_USERNAME}
      SPRING_DATA_MONGODB_PASSWORD: ${SPRING_DATA_MONGODB_PASSWORD}
      SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE: ${SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE}

  rabbitmq:
    container_name: 'rabbitmq'
    image: 'rabbitmq:latest'
    environment:
      - 'RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}'
      - 'RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}'
    ports:
      - '5672:5672'
    networks:
      - internal-net

  data-generator:
    container_name: 'data-generator'
    build:
      context: ./ProjDataGen
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
      - springboot
    networks:
      - internal-net
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672

networks:
  internal-net:
    ipam:
      driver: default
      config:
        - subnet: 10.140.0.0/24
